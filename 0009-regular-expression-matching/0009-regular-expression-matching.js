function isMatch(s, p) {
    // Создаем 2D массив dp для хранения промежуточных результатов
    const dp = Array.from({ length: s.length + 1 }, () => Array(p.length + 1).fill(false));

    // Пустой паттерн соответствует пустой строке
    dp[0][0] = true;

    // Обрабатываем паттерны с '*' в начале
    for (let j = 1; j <= p.length; j++) {
        if (p[j - 1] === '*') {
            dp[0][j] = dp[0][j - 2];
        }
    }

    // Заполняем массив dp
    for (let i = 1; i <= s.length; i++) {
        for (let j = 1; j <= p.length; j++) {
            // Если символы совпадают или паттерн содержит '.', берем значение из диагонали
            if (p[j - 1] === s[i - 1] || p[j - 1] === '.') {
                dp[i][j] = dp[i - 1][j - 1];
            }
            // Если паттерн содержит '*', рассматриваем ноль или более повторений предыдущего элемента
            else if (p[j - 1] === '*') {
                dp[i][j] = dp[i][j - 2] || (dp[i - 1][j] && (s[i - 1] === p[j - 2] || p[j - 2] === '.'));
            }
        }
    }

    // Результат находится в правом нижнем углу массива dp
    return dp[s.length][p.length];
}